services:
  # InfluxDB - Time series database for metrics
  influxdb:
    image: influxdb:2.7
    container_name: service-doctor-influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
  
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    restart: unless-stopped
    networks:
      - service-doctor-network

  # Redis - For fast data access and caching
  redis:
    image: redis:7-alpine
    container_name: service-doctor-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - service-doctor-network

  # MongoDB - Document database
  mongodb:
    image: mongo:7
    container_name: service-doctor-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    restart: unless-stopped
    networks:
      - service-doctor-network

  # MongoDB Express - Web-based MongoDB admin interface (optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: service-doctor-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - service-doctor-network

  # RedisInsight - Redis web interface (Option 1)
  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: service-doctor-redisinsight
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/db
    environment:
      - RIPORT=${RIPORT}
      - RIHOST=${RIHOST}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - service-doctor-network

  # Redis Commander - Alternative Redis web interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: service-doctor-redis-commander
    ports:
      - "8002:8081"
    environment:
      - REDIS_HOSTS=${REDIS_COMMANDER_REDIS_HOSTS}
      - HTTP_USER=${REDIS_COMMANDER_HTTP_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_HTTP_PASSWORD}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - service-doctor-network


volumes:
  influxdb_data:
  influxdb_config:
  redis_data:
  redisinsight_data:
  mongodb_data:
  mongodb_config:

networks:
  service-doctor-network:
    driver: bridge